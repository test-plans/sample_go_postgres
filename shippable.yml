language: go

go:
  - 1.2
  - 1.3
  - 1.4
  - 1.5
  #- tip

#build_image: shippable/minv2:beta

services:
  - postgres
# Addons used by app
build_image: drydock/u14golall:tip

env:
  global:
  - CI_REPORT=shippable/testresults/junit.xml
  - foo=bar
  - secure: hUzHqlEn/cNU7MaY4lL3k5UsmY1gAFOVj5/CyoQ797xSVfPa6D+5/Gal5uyYzUk5+c4DJJO2KnzBiOO6pYv7rL328TepyE212ySFFz2XBA/5KA9hxjNRR8SlM8Z1dXST/cOj10P6citCALUrSzjAxYkn9eT04+1r5Ccb6HUvIksALTwYUB4zOuYYkkMaDiUX+ZWdJiZbrcEyf5TOnAaWxuWy6jrN4him7c4TjcYCGAsjf320u90x9bOggORnB3Vs2HKdOsZrH1DXPxhNVDKA+g2/Ai8e3qV6IdrfKWrcxKSWMXIMpCtBPLBvSNQi44CwulfGFTPgEHP8TABI6ai5Pg==
  

before_install:
  - go get github.com/lib/pq
  - go get github.com/t-yuki/gocover-cobertura
  - go get github.com/onsi/gomega
  - go get github.com/onsi/ginkgo
  - go get golang.org/x/tools/cmd/cover
  - mkdir -p $GOPATH/src/github.com/Shippable
  - ln -sfn $PWD $GOPATH/src/github.com/Shippable/sample_go


# Make folders for the reports
before_script:
  - mkdir -p shippable/testresults
  - mkdir -p shippable/codecoverage
  - psql -c 'drop database if exists test;' -U postgres -w
  - psql -c 'CREATE DATABASE test;' -U postgres

archive: true


script:
  - echo $key1
  - go test -coverprofile=coverage.txt -covermode count ./
  - $GOPATH/bin/gocover-cobertura < coverage.txt > shippable/codecoverage/coverage.xml

notifications:
 email: false
#cache: true 
after_script:
  - cp README.md ./shippable
  - echo "hi"

#testing pr2
